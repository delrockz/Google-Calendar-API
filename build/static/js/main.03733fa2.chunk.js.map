{"version":3,"sources":["components/GoogleLogin.js","App.js","reportWebVitals.js","index.js"],"names":["GoogleLogin","props","initialState","setState","calData","displayEvents","axios","get","then","response","state","resData","eval","data","i","events","push","eventName","recurrence","catch","err","console","log","bind","eventList","this","map","cal","class","style","display","method","action","icon","faGoogle","onClick","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w3DAIMA,Y,0YACF,qBAAYC,OAAQ,IAAD,sMACf,uBAAMA,OADS,MAQnBC,aAAa,WACT,MAAKC,SAAS,CACVC,QAAS,MAVE,MAanBC,cAAiB,WACbC,6CAAMC,IAAI,gBACTC,MAAK,SAAAC,UACF,MAAKP,eACL,IAAIE,QAAO,0KAAM,MAAKM,MAAMN,SACtBO,QAAQC,KAAKH,SAASI,KAAK,IACjC,IAAI,IAAIC,KAAKH,QAAQI,OACjBX,QAAQY,KAAK,CAACC,UAAUN,QAAQI,OAAOD,GAAII,WAAWP,QAAQO,WAAWJ,KAE7E,MAAKX,SAAS,CAACC,QAAUA,aAE5Be,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,QAAQF,OAtBhC,MAAKV,MAAQ,CACTN,QAAS,IAEb,MAAKC,cAAckB,KAAnB,sLACA,MAAKrB,aAAaqB,KAAlB,sLANe,M,uNA0BT,IAEAC,EADYC,KAAKf,MAAhBN,QACmBsB,KAAI,SAAAC,GAAG,OACjC,kEAAIC,MAAM,gBAAV,UACA,mEAAMA,MAAM,0BACZ,oEAAMA,MAAM,sBAAZ,UAAmCD,EAAIV,UAAvC,MAAqDU,EAAIT,oBACzD,OACI,mEAAKU,MAAM,qCAAX,UACI,mEAAMC,MAAO,CAACC,QAAQ,SAAUF,MAAM,UAAUG,OAAO,MAAMC,OAAO,SAApE,SACA,sEAAQH,MAAO,CAACC,QAAQ,SAAUF,MAAM,yCAAxC,UACQ,kEAAKA,MAAM,uBACX,2DAAC,+DAAD,CAAiBK,KAAMC,oEAF/B,OAGQ,mEAAMN,MAAM,4BAAZ,kCAGR,oEACA,sEAAQC,MAAO,CAACC,QAAQ,SAAUF,MAAM,wCAAwCO,QAASV,KAAKpB,cAA9F,UACA,kEAAKuB,MAAM,uBADX,iCAGA,iEAAIC,MAAO,CAACC,QAAQ,SAAUF,MAAM,WAApC,qBACCJ,S,aA/CSY,8CAqDXpC,mC,wHC9CAqC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACtC,EAAA,EAAD,OCMSuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.03733fa2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nclass GoogleLogin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            calData: []\r\n        }\r\n        this.displayEvents.bind(this);\r\n        this.initialState.bind(this);\r\n    }\r\n    initialState=()=>{\r\n        this.setState({\r\n            calData: []\r\n        })\r\n    }\r\n    displayEvents =  ()=>{\r\n        axios.get('/fetchEvents')\r\n        .then(response => {\r\n            this.initialState();\r\n            let calData =[...this.state.calData];\r\n            const resData=eval(response.data[0]);\r\n            for(var i in resData.events){\r\n                calData.push({eventName:resData.events[i], recurrence:resData.recurrence[i]})\r\n            }           \r\n            this.setState({calData : calData})\r\n        })\r\n        .catch(err=>console.log(\"dataE\",err))\r\n    }\r\n    render() {\r\n        const {calData} = this.state;\r\n        const eventList = calData.map(cal=>\r\n        <li class=\"mdc-list-item\">\r\n        <span class=\"mdc-list-item__ripple\"></span>\r\n        <span class=\"mdc-list-item__text\">{cal.eventName} : {cal.recurrence}</span></li>)\r\n        return (\r\n            <div class=\"container mt-3 p-5 border bg-light\">\r\n                <form style={{display:\"block\"}} class=\"mx-auto\" method=\"GET\" action=\"/gauth\">\r\n                <button style={{display:\"block\"}} class=\"mx-auto mdc-button mdc-button--raised \">\r\n                        <div class=\"mdc-button__ripple\"></div>\r\n                        <FontAwesomeIcon icon={faGoogle}/>&nbsp;\r\n                        <span class=\"mdc-button__label contact\">Login to Google</span>\r\n                </button>\r\n                </form>\r\n                <br />\r\n                <button style={{display:\"block\"}} class=\"mx-auto mdc-button mdc-button--raised\" onClick={this.displayEvents}>\r\n                <div class=\"mdc-button__ripple\"></div>\r\n                Show Google Calendar Events</button>\r\n                <ul style={{display:\"block\"}} class=\"mdc-list\">Events:</ul>\r\n                {eventList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoogleLogin\r\n","import React from 'react'\nimport GoogleLogin from './components/GoogleLogin'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GoogleLogin />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}